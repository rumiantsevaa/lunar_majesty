name: Moon Data Parser and Processor (Dockerized)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
    - cron: '0 12 * * *'
    - cron: '0 15 * * *'

jobs:
  parse-and-process:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    container:
      image: docker:latest
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build parser container
        run: |
          echo "üîß Building parser container..."
          docker build -t moon-parser -f Dockerfile.parse_data .
          echo "‚úÖ Container built: moon-parser"

      - name: Run parser and save output
        run: |
          echo "üöÄ Running parser..."
          mkdir -p artifacts
          docker run --rm \
            -v $(pwd)/artifacts:/app/output \
            moon-parser > artifacts/moon_data.json

          echo "üì¶ Checking file:"
          ls -la artifacts/moon_data.json || echo "‚ùå File not created"

      - name: Prepare JSON for bot
        id: prepare-json
        run: |
          CONTENT=$(cat artifacts/moon_data.json | tr -d '\n' | tr -d '\r')
          echo "content=${CONTENT}" >> $GITHUB_OUTPUT
          echo "MOON_JSON=${CONTENT}" >> $GITHUB_ENV
          echo "‚úÖ JSON saved to environment variable"

      - name: Build bot container
        run: |
          echo "üîß Building bot container..."
          docker build -t moon-bot -f Dockerfile.bot_launcher .
          echo "‚úÖ Container built: moon-bot"

      - name: Run bot to process data
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}
          MOON_JSON: ${{ steps.prepare-json.outputs.content }}
        run: |
          echo "üöÄ Running bot to process data..."
          timeout 150s docker run --rm \
            -e PA_USERNAME=$PA_USERNAME \
            -e PA_PASSWORD=$PA_PASSWORD \
            -e MOON_JSON="$MOON_JSON" \
            -v $(pwd)/artifacts:/app/output \
            moon-bot || echo "‚ùå Bot failed or timed out"

      - name: Verify processed file
        run: |
          echo "üì¶ Checking for processed file..."
          if [ -f "artifacts/moon_data_processed.json" ]; then
            echo "‚úÖ File created successfully!"
            echo "üìä Size: $(wc -c < artifacts/moon_data_processed.json) bytes"
            echo "üìù Preview (200 chars):"
            head -c 200 artifacts/moon_data_processed.json
          else
            echo "‚ùå Processed file not found"
            ls -la artifacts/*.json || echo "No files found"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moon-data-processed
          path: |
            artifacts/moon_data.json
            artifacts/moon_data_processed.json
          retention-days: 30

      - name: Show final status
        if: always()
        run: |
          echo "üìã Final status:"
          ls -la artifacts/*.json || echo "‚ùå JSON files not found"
          if [ -f "artifacts/moon_data_processed.json" ]; then
            echo "‚úÖ All stages completed successfully!"
          else
            echo "‚ö†Ô∏è Processing completed with errors!"
          fi
