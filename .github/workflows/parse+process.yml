name: Moon Data Parser and Processor

on:
  workflow_dispatch:

jobs:
  parse-and-process:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run and save parser output
        run: |
          python parse_data.py > moon_data.json
          echo "‚úÖ –î–∞–Ω–Ω—ã–µ –ª—É–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ moon_data.json"
          ls -la moon_data.json

      - name: Read JSON to env var
        id: json
        run: |
          CONTENT=$(cat moon_data.json | python3 -c 'import json,sys; print(json.dumps(json.load(sys.stdin)))')
          echo "MOON_JSON=$CONTENT" >> $GITHUB_ENV
          echo "‚úÖ JSON –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è"

      - name: Launch bot with Selenium
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}
          MOON_JSON: ${{ env.MOON_JSON }}
        run: |
          echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
          python bot_launcher.py
          echo "‚úÖ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É"

      - name: Wait for result file (optional)
        run: |
          echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..."
          for i in {1..30}; do
            if [ -f "moon_data_processed.json" ]; then
              echo "‚úÖ –§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω!"
              break
            fi
            echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/30 - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ..."
            sleep 2
          done
        continue-on-error: true

      - name: Upload processed result
        uses: actions/upload-artifact@v4
        with:
          name: moon-data-processed
          path: |
            moon_data.json
            moon_data_processed.json
        continue-on-error: true

      - name: Show final status
        run: |
          echo "üìã –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:"
          ls -la *.json || echo "–ù–µ—Ç JSON —Ñ–∞–π–ª–æ–≤"
          echo "‚úÖ Workflow –∑–∞–≤–µ—Ä—à–µ–Ω"
