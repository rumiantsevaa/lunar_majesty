name: Moon Data Parser and Processor (Dockerized)

# CI/CD workflow for daily updates of https://rumiantsevaa.github.io/lunar_majesty/ data on GitHub Pages 
# GitHub Actions runner (works as master node) scrapes raw moon data - parse_data.py
# (Acts as GA worker that controls the how GA enviroment gets the data, how it's parsed and saves it in GA workflow artifacts.) 
# Raw data is sent to PythonAnywhere (PA) node that acts as enviroment for data processing - bot_launcher.py 
# (Acts as GA worker that controls the how PA enviroment gets the data, how it's processed and saves it in GA workflow artifacts.) 
# GA worker commits processed data to repo (triggering Pages rebuild daily)


on:
  workflow_dispatch: 
  schedule:
    - cron: '0 0 * * *' 
    - cron: '0 12 * * *'  
    - cron: '0 15 * * *' 
    
jobs:
  parse-and-process:
    runs-on: ubuntu-latest
    container:
      image: docker:dind
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare ChromeDriver
        run: |
          sudo cp matching_chrome_driver/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version

      - name: Build and run parser container
        run: |
          docker build -t moon-parser -f Dockerfile.parse_data \
            --build-arg CHROMEDRIVER_PATH=matching_chrome_driver/chromedriver .
          
          docker run --rm \
            -v $(pwd):/app/output \
            -v /usr/local/bin/chromedriver:/usr/local/bin/chromedriver \
            moon-parser > moon_data.json
          
          echo "✅ Raw moon data collected in moon_data.json"
          ls -la moon_data.json

      - name: Prepare JSON for bot
        id: prepare-json
        run: |
          CONTENT=$(cat moon_data.json | jq -c .)
          echo "content=${CONTENT}" >> $GITHUB_OUTPUT
          echo "MOON_JSON=${CONTENT}" >> $GITHUB_ENV

      - name: Build and run bot container
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}
          MOON_JSON: ${{ steps.prepare-json.outputs.content }}
        run: |
          docker build -t moon-bot -f Dockerfile.bot_launcher \
            --build-arg CHROMEDRIVER_PATH=matching_chrome_driver/chromedriver .
          
          docker run --rm \
            -e PA_USERNAME=$PA_USERNAME \
            -e PA_PASSWORD=$PA_PASSWORD \
            -e MOON_JSON="$MOON_JSON" \
            -v $(pwd):/app/output \
            -v /usr/local/bin/chromedriver:/usr/local/bin/chromedriver \
            moon-bot

      - name: Verify processed file
        run: |
          if [ -f "moon_data_processed.json" ]; then
            echo "✅ The processed file was created successfully!"
            echo "📊 File size: $(wc -c < moon_data_processed.json) byte"
            echo "📝 First 200 characters:"
            head -c 200 moon_data_processed.json
            echo ""
            echo "..."
          else
            echo "❌ Processed file not found"
            ls -la *.json || echo "No JSON files"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moon-data-processed
          path: |
            moon_data.json
            moon_data_processed.json
          retention-days: 30

      - name: Commit processed data
        if: success()
        run: |
          git config --global user.email "lunar-bot@github.com"
          git config --global user.name "Lunar Majesty Bot"
          
          mkdir -p artifacts
          [ -f moon_data_processed.json ] && mv moon_data_processed.json artifacts/
          [ -f moon_data.json ] && mv moon_data.json artifacts/

          git add artifacts/*.json
          if git diff --cached --quiet; then
            echo "⚠️ No changes to commit"
          else
            git commit -m "🌙 Auto-update lunar data $(date +'%Y-%m-%d %H:%M UTC')"
            git push origin main
            echo "✅ Changes committed and pushed"
          fi

      - name: Show final status
        if: always()
        run: |
          echo "📋 Final status:"
          ls -la artifacts/*.json || echo "No JSON files found"
          echo "🌙 Processing completed!"
          fi
          
