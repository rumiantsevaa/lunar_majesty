name: Moon Data Parser and Processor

# CI/CD workflow for daily updates of https://rumiantsevaa.github.io/lunar_majesty/ data on GitHub Pages 

# GitHub Actions runner (works as master node) scrapes raw moon data - parse_data.py
# (Acts as GA worker that controls the how GA enviroment gets the data, how it's parsed and saves it in GA workflow artifacts.) 

# Raw data is sent to PythonAnywhere (PA) node that acts as enviroment for data processing - bot_launcher.py 
# (Acts as GA worker that controls the how PA enviroment gets the data, how it's processed and saves it in GA workflow artifacts.) 

# Future implementation: GA worker commits processed data to repo (triggering Pages rebuild daily)

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 0 * * *' 
    
jobs:
  parse-and-process:
    runs-on: ubuntu-latest  # Primary worker node
    timeout-minutes: 3

  # On fail strategy
    strategy:
      fail-fast: false
      matrix:
        attempt: [1, 2, 3]
    
    continue-on-error: ${{ matrix.attempt < 3 }}
    steps:
      - name: Attempt info
        run: echo "🔄 Attempt ${{ matrix.attempt }}/3"
  # On fail strategy END  
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run and save parser output
        run: |
          python parse_data.py > moon_data.json
          echo "✅ Raw moon data collected in moon_data.json"
          ls -la moon_data.json

      - name: Read JSON to env var
        id: json
        run: |
          CONTENT=$(cat moon_data.json | python3 -c 'import json,sys; print(json.dumps(json.load(sys.stdin)))')
          echo "MOON_JSON=$CONTENT" >> $GITHUB_ENV
          echo "✅ JSON data loaded into environment variable"

      - name: Launch bot with Selenium
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_PASSWORD: ${{ secrets.PA_PASSWORD }}
          MOON_JSON: ${{ env.MOON_JSON }}
        run: |
          echo "🚀 Launching a selenium controller bot for data processing in the PA node enviroment..."
          python bot_launcher.py

      - name: Verify processed file
        run: |
          if [ -f "moon_data_processed.json" ]; then
            echo "✅ The processed file was created successfully!"
            echo "📊 File size: $(wc -c < moon_data_processed.json) byte"
            echo "📝 First 200 characters:"
            head -c 200 moon_data_processed.json
            echo ""
            echo "..."
          else
            echo "❌ Processed file not found"
            ls -la *.json || echo "No JSON files"
          fi

      - name: Upload processed result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: moon-data-processed
          path: |
            moon_data.json
            moon_data_processed.json
          retention-days: 30

      - name: Show final status
        if: always()
        run: |
          echo "📋 Final status:"
          ls -la *.json || echo "No JSON files"
          if [ -f "moon_data_processed.json" ]; then
            echo "✅ Processing completed successfully!"
          else
            echo "⚠️ The processed file was not created."
          fi
          echo "✅ Workflow completed. Waiting for the worker environment to complete post steps."
