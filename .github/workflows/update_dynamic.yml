name: Update Dynamic Content on Site

on:
  workflow_run:
    workflows: ["Moon Data Parser and Processor"]
    types:
      - completed
  workflow_dispatch:

jobs:
  get-latest-artifact:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.fetch.outputs.run_id }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_FOR_LUNAR_MAJESTY_DATA_UPDATE }}
        
      - name: Get latest successful run ID of parser workflow
        id: fetch
        run: |
          echo "üì° Fetching latest successful run ID..."
          run_id=$(gh run list --workflow="parse+process.yml" --branch=main --json databaseId,status,conclusion --jq '[.[] | select(.status=="completed" and .conclusion=="success")][0].databaseId')
          if [ -z "$run_id" ] || [ "$run_id" = "null" ]; then
            echo "‚ùå No successful run found"
            exit 1
          fi
          echo "Found run_id=$run_id"
          echo "run_id=$run_id" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.PAT_FOR_LUNAR_MAJESTY_DATA_UPDATE }}

  update-site-content:
    needs: get-latest-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_FOR_LUNAR_MAJESTY_DATA_UPDATE }}
          
      - name: Download artifact from previous run
        uses: dawidd6/action-download-artifact@v4
        with:
          workflow: parse+process.yml
          run_id: ${{ needs.get-latest-artifact.outputs.run_id }}
          name: moon-data-processed
          path: ./artifacts
          
      - name: Verify artifact contents
        run: |
          echo "üìÅ Verifying artifact contents..."
          if [ -f "./artifacts/moon_data_processed.json" ]; then
            echo "‚úÖ Artifact found and ready for site"
            cat ./artifacts/moon_data_processed.json | jq . | head -20
          else
            echo "‚ùå Artifact file not found!"
            ls -la ./artifacts/
            exit 1
          fi
          
      - name: Commit and push JSON data
        run: |
          git config --local user.email "lunar-bot@github.com"
          git config --local user.name "Lunar Majesty Bot"
          if git diff --quiet; then
            echo "üìÑ No changes detected in JSON data"
            exit 0
          fi
          echo "üìù JSON data updated, committing..."
          git add artifacts/moon_data_processed.json
          git commit -m "üåô Auto-update lunar JSON data $(date +'%Y-%m-%d %H:%M UTC')" || {
            echo "‚ö†Ô∏è Nothing to commit, treating as success"
            exit 0
          }
          git push origin main
          echo "‚úÖ Updated JSON data successfully pushed to repository"
