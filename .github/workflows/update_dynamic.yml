name: Update Dynamic Content on Site

on:
  workflow_run:
    workflows: ["Moon Data Parser and Processor"]  # parse+process.yml
    types:
      - completed
  workflow_dispatch: 

jobs:
  get-latest-artifact:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.fetch.outputs.run_id }}
    steps:
      - name: Checkout repo (for GA CLI context)
        uses: actions/checkout@v4
        
      - name: Get latest successful run ID of parser workflow
        id: fetch
        run: |
          echo "📡 Fetching latest successful run ID..."
          run_id=$(gh run list \
            --workflow="parse+process.yml" \
            --branch=main \
            --json databaseId,status,conclusion \
            --jq '[.[] | select(.status=="completed" and .conclusion=="success")][0].databaseId')
          
          echo "Found run_id=$run_id"
          echo "run_id=$run_id" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  download-and-use:
    needs: get-latest-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from previous run
        uses: dawidd6/action-download-artifact@v4
        with:
          workflow: parse+process.yml
          run_id: ${{ needs.get-latest-artifact.outputs.run_id }}
          name: moon-data-processed
          path: ./artifacts

      - name: Use the artifact
        run: |
          echo "📁 Contents of moon_data_processed.json:"
          cat ./artifacts/moon_data_processed.json

      - name: Update only cards array
        run: |
          DATA_FILE="./artifacts/moon_data_processed.json"
          JS_FILE="js/lunar_majesty.js"

          moon_today=$(jq -r '.moon_today.moon_today | "\(.current_time)\n🌙 Phase: \(.moon_phase_tonight)\nNew Moon: \(.new_moon)\nFirst Quarter: \(.first_quarter)"' "$DATA_FILE")
          moon_dream=$(jq -r '.moon_dream.moon_dream.time_translated' "$DATA_FILE")
          inspiration=$(jq -r '.inspiration.inspiration | "\(.content)\n\n\(.author)"' "$DATA_FILE")

          new_cards=$(jq -n --arg mt "$moon_today" --arg md "$moon_dream" --arg insp "$inspiration" \
            '[{title:"Moon today",content:$mt},{title:"Moon Phase Dream Dictionary",content:$md},{title:"Daily inspiration",content:$insp}]')

          escaped_cards=$(echo "$new_cards" | jq -Rs .)
          awk -v new_cards="const cards = $new_cards;" '
            BEGIN { replaced = 0 }
            {
              if ($0 ~ /const cards = \[.*\];/ && !replaced) {
                print new_cards
                replaced = 1
              } else {
                print
              }
            }
          ' "$JS_FILE" > tmp.js && mv tmp.js "$JS_FILE"
    



