import os
import time
import json
import shutil
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains

USERNAME = os.getenv("PA_USERNAME")
PASSWORD = os.getenv("PA_PASSWORD")
MOON_JSON = os.getenv("MOON_JSON")

DOWNLOAD_DIR = os.path.abspath("downloads")
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

def wait_and_click(driver, by, value, timeout=10):
    for _ in range(timeout * 2):
        try:
            element = driver.find_element(by, value)
            element.click()
            return True
        except:
            time.sleep(0.5)
    return False

def wait_and_type(driver, by, value, text, timeout=10):
    for _ in range(timeout * 2):
        try:
            el = driver.find_element(by, value)
            el.clear()
            el.send_keys(text)
            return True
        except:
            time.sleep(0.5)
    return False

def wait_for_file(filename, timeout=15):
    """–ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (.crdownload)"""
    for _ in range(timeout * 2):
        if os.path.exists(filename) and not filename.endswith(".crdownload"):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–π (–Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è)
            if not any(fname.startswith(filename) and fname.endswith(".crdownload") for fname in os.listdir(DOWNLOAD_DIR)):
                return True
        time.sleep(0.5)
    return False
    

def run():
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    print(f"üìã Username: {USERNAME}")
    print(f"üåô Moon data available: {'Yes' if MOON_JSON else 'No'}")
    
    if not USERNAME or not PASSWORD:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –∑–∞–¥–∞–Ω—ã PA_USERNAME –∏–ª–∏ PA_PASSWORD")
        return
    
    if not MOON_JSON:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ MOON_JSON")
        return
    
    try:
        moon_data = json.loads(MOON_JSON)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ª—É–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(moon_data)} —Ä–∞–∑–¥–µ–ª–æ–≤")
    except json.JSONDecodeError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return

    options = uc.ChromeOptions()
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –ø–æ—è–≤–ª—è–ª—Å—è –¥–∏–∞–ª–æ–≥
    prefs = {
        "download.default_directory": DOWNLOAD_DIR,
        "download.prompt_for_download": False,
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True,
    }
    options.add_experimental_option("prefs", prefs)

    options.headless = True
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--window-size=1920,1080")
    print("üåê –ó–∞–ø—É—Å–∫ Chrome...")
    driver = uc.Chrome(options=options)
    
    try:
        # 1. –õ–æ–≥–∏–Ω –≤ PythonAnywhere
        print("üîê –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥ –≤ PythonAnywhere...")
        driver.get("https://www.pythonanywhere.com/login/")
        wait_and_type(driver, By.ID, "id_auth-username", USERNAME)
        wait_and_type(driver, By.ID, "id_auth-password", PASSWORD)
        wait_and_click(driver, By.ID, "id_next")
        time.sleep(3)
        print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω")

        # 2. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ moon_data.json
        print("üìù –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ moon_data.json –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}/moon_data.json?edit")
        time.sleep(5)
        
        # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (—Ä–µ–¥–∞–∫—Ç–æ—Ä —É–∂–µ –≤ —Ñ–æ–∫—É—Å–µ)
        active_element = driver.switch_to.active_element
        
        # –í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë –∏ —É–¥–∞–ª–∏—Ç—å
        print("üìã –û—á–∏—Å—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        ActionChains(driver)\
            .key_down(Keys.CONTROL)\
            .send_keys('a')\
            .key_up(Keys.CONTROL)\
            .perform()
        time.sleep(1)
        active_element.send_keys(Keys.DELETE)
        time.sleep(1)
        
        # –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìã –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö JSON...")
        for chunk in [MOON_JSON[i:i+100] for i in range(0, len(MOON_JSON), 100)]:
            active_element.send_keys(chunk)
            time.sleep(0.1)
        time.sleep(2)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞...")
        ActionChains(driver)\
            .key_down(Keys.CONTROL)\
            .send_keys('s')\
            .key_up(Keys.CONTROL)\
            .perform()
        time.sleep(3)
        print("‚úÖ –§–∞–π–ª moon_data.json —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

        # 3. –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Å–æ–ª—å—é (—É—Å—Ç–æ–π—á–∏–≤—ã–π –º–µ—Ç–æ–¥)
        print("üñ•Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Å–æ–ª–∏...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/consoles/")
        time.sleep(3)

        # –ó–∞–∫—Ä—ã—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Å–æ–ª–∏
        close_buttons = driver.find_elements(By.CSS_SELECTOR, 'span.glyphicon-remove')
        for btn in close_buttons:
            try:
                btn.click()
                time.sleep(1)
            except:
                pass

        # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}")
        time.sleep(2)

        # –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Å–æ–ª–∏
        print("üö™ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π bash-–∫–æ–Ω—Å–æ–ª–∏...")
        open_link = driver.find_element(By.CSS_SELECTOR, f'a[href="/user/{USERNAME}/consoles/bash//home/{USERNAME}/new"]')
        open_link.click()
        time.sleep(10)

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ iframe –∫–æ–Ω—Å–æ–ª–∏
        print("üì∫ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ iframe –∫–æ–Ω—Å–æ–ª–∏...")
        driver.switch_to.frame(driver.find_element(By.ID, "id_console"))
        time.sleep(5)

        # –í–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã
        console_body = driver.find_element(By.TAG_NAME, "body")
        actions = ActionChains(driver)
        actions.move_to_element(console_body).click()
        actions.send_keys('python3 pythonanywhere_starter.py')
        actions.send_keys(Keys.ENTER)
        actions.perform()
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        time.sleep(20)

        # –í–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        driver.switch_to.default_content()

        # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        print("üìñ –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}")
        time.sleep(5)

        print("‚¨áÔ∏è –ö–ª–∏–∫–∞–µ–º –ø–æ —Å—Å—ã–ª–∫–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è moon_data_processed.json")
        download_link = driver.find_element(By.CSS_SELECTOR, 'a.download_link[href$="moon_data_processed.json"]')
        download_link.click()

        # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫
        local_filename = os.path.join(DOWNLOAD_DIR, "moon_data_processed.json")
        print(f"‚è≥ –ñ–¥—ë–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {local_filename} ...")
        if not wait_for_file(local_filename):
            raise Exception("–§–∞–π–ª moon_data_processed.json –Ω–µ —Å–∫–∞—á–∞–ª—Å—è –∑–∞ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è")

        # –ß–∏—Ç–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        print("üìã –ß–∏—Ç–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª...")
        with open(local_filename, "r", encoding="utf-8") as f:
            processed_content = f.read()

        print(f"‚úÖ –§–∞–π–ª moon_data_processed.json –ø—Ä–æ—á–∏—Ç–∞–Ω ({len(processed_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        print(f"üìù –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: {processed_content[:200]}...")

        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã GitHub Actions –µ–≥–æ —É–≤–∏–¥–µ–ª
        dest_path = os.path.join(os.getcwd(), "moon_data_processed.json")
        shutil.copy(local_filename, dest_path)
        print(f"‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {dest_path}")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
    finally:
        print("üîö –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...")
        driver.quit()

if __name__ == "__main__":
    run()
