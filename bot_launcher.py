import os
import time
import json
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains

USERNAME = os.getenv("PA_USERNAME")
PASSWORD = os.getenv("PA_PASSWORD")
MOON_JSON = os.getenv("MOON_JSON")

def wait_and_click(driver, by, value, timeout=10):
    for _ in range(timeout * 2):
        try:
            element = driver.find_element(by, value)
            driver.execute_script("arguments[0].scrollIntoView();", element)
            element.click()
            return
        except:
            time.sleep(0.5)
    raise Exception(f"Element not found: {value}")

def wait_and_type(driver, by, value, text, timeout=10):
    for _ in range(timeout * 2):
        try:
            el = driver.find_element(by, value)
            el.clear()
            el.send_keys(text)
            return
        except:
            time.sleep(0.5)
    raise Exception(f"Field not found: {value}")

def wait_for_element(driver, by, value, timeout=10):
    for _ in range(timeout * 2):
        try:
            return driver.find_element(by, value)
        except:
            time.sleep(0.5)
    raise Exception(f"Element not found: {value}")

def run():
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    print(f"üìã Username: {USERNAME}")
    print(f"üåô Moon data available: {'Yes' if MOON_JSON else 'No'}")
    
    if not USERNAME or not PASSWORD:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –∑–∞–¥–∞–Ω—ã PA_USERNAME –∏–ª–∏ PA_PASSWORD")
        return
    
    if not MOON_JSON:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ MOON_JSON")
        return
    
    try:
        moon_data = json.loads(MOON_JSON)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ª—É–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(moon_data)} —Ä–∞–∑–¥–µ–ª–æ–≤")
    except json.JSONDecodeError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return

    options = uc.ChromeOptions()
    options.headless = True
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-web-security")
    options.add_argument("--allow-running-insecure-content")

    print("üåê –ó–∞–ø—É—Å–∫ Chrome...")
    driver = uc.Chrome(options=options)
    
    try:
        # –õ–æ–≥–∏–Ω
        print("üîê –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥ –≤ PythonAnywhere...")
        driver.get("https://www.pythonanywhere.com/login/")
        wait_and_type(driver, By.ID, "id_auth-username", USERNAME)
        wait_and_type(driver, By.ID, "id_auth-password", PASSWORD)
        wait_and_click(driver, By.ID, "id_next")
        time.sleep(3)
        print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω")

        # 1. –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ moon_data.json –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        print("üìù –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ moon_data.json –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}/moon_data.json?edit")
        time.sleep(5)
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        print(f"üîç –¢–µ–∫—É—â–∏–π URL: {driver.current_url}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {driver.title}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
        try:
            error_messages = driver.find_elements(By.CSS_SELECTOR, ".alert, .error, .message")
            for msg in error_messages:
                if msg.text.strip():
                    print(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {msg.text.strip()}")
        except:
            pass

        # –ü–æ–∏—Å–∫ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("üîÑ –ü–æ–∏—Å–∫ iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ iframe
        iframes = driver.find_elements(By.TAG_NAME, "iframe")
        print(f"üìù –ù–∞–π–¥–µ–Ω–æ {len(iframes)} iframe –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
        
        editor_frame = None
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ ID/—Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è iframe
        possible_selectors = [
            (By.ID, "id_file_editor_iframe"),
            (By.ID, "file_editor_iframe"),
            (By.ID, "editor_iframe"),
            (By.CSS_SELECTOR, "iframe[src*='editor']"),
            (By.CSS_SELECTOR, "iframe")
        ]
        
        for by, selector in possible_selectors:
            try:
                editor_frame = driver.find_element(by, selector)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω iframe —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: {selector}")
                break
            except:
                continue
        
        if not editor_frame and iframes:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º, –≤–æ–∑—å–º–µ–º –ø–µ—Ä–≤—ã–π iframe
            editor_frame = iframes[0]
            print("üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π iframe")
        
        if not editor_frame:
            raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞")
            
        driver.switch_to.frame(editor_frame)
        time.sleep(5)

        # –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("üìã –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        editor_selectors = [
            ".ace_text-input",
            ".ace_editor textarea",
            "textarea",
            ".CodeMirror textarea",
            "#id_content"
        ]
        
        editor = None
        for selector in editor_selectors:
            try:
                editor = driver.find_element(By.CSS_SELECTOR, selector)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä: {selector}")
                break
            except:
                continue
        
        if not editor:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π input –∏–ª–∏ textarea
            try:
                editor = driver.find_element(By.TAG_NAME, "textarea")
                print("‚úÖ –ù–∞–π–¥–µ–Ω textarea —Ä–µ–¥–∞–∫—Ç–æ—Ä")
            except:
                raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä")

        # –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏ –≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìã –û—á–∏—Å—Ç–∫–∞ –∏ –≤—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö JSON...")
        
        # –ö–ª–∏–∫–∞–µ–º –Ω–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è
        actions = ActionChains(driver)
        actions.move_to_element(editor).click()
        actions.perform()
        time.sleep(1)
        
        # –í—ã–¥–µ–ª—è–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –∑–∞–º–µ–Ω—è–µ–º
        actions = ActionChains(driver)
        actions.key_down(Keys.CONTROL).send_keys('a').key_up(Keys.CONTROL)  # Ctrl+A
        actions.send_keys(Keys.DELETE)  # –£–¥–∞–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–µ
        actions.send_keys(MOON_JSON)  # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        actions.perform()
        time.sleep(3)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (Ctrl+S)...")
        actions = ActionChains(driver)
        actions.key_down(Keys.CONTROL).send_keys('s').key_up(Keys.CONTROL)  # Ctrl+S
        actions.perform()
        time.sleep(3)

        # –í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –æ–∫–Ω—É
        driver.switch_to.default_content()
        print("‚úÖ –§–∞–π–ª moon_data.json —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

        # 2. –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
        print("üñ•Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/consoles/")
        time.sleep(3)

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Å–æ–ª–µ–π
        close_buttons = driver.find_elements(By.CSS_SELECTOR, 'span.glyphicon-remove')
        for btn in close_buttons:
            try:
                btn.click()
                time.sleep(1)
            except:
                pass

        # –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Å–æ–ª–∏
        print("üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π bash –∫–æ–Ω—Å–æ–ª–∏...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}")
        time.sleep(2)
        open_link = driver.find_element(By.CSS_SELECTOR, f'a[href="/user/{USERNAME}/consoles/bash//home/{USERNAME}/new"]')
        open_link.click()
        time.sleep(15)

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
        print("‚ö° –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
        driver.switch_to.frame(driver.find_element(By.ID, "id_console"))
        time.sleep(5)
        
        body = driver.find_element(By.TAG_NAME, "body")
        actions = ActionChains(driver)
        actions.move_to_element(body).click()
        actions.send_keys('python3 pythonanywhere_starter.py')
        actions.send_keys(Keys.ENTER)
        actions.perform()
        
        # –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (60 —Å–µ–∫—É–Ω–¥)...")
        time.sleep(60)

        # –í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –æ–∫–Ω—É
        driver.switch_to.default_content()
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω")

        # 3. –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        print("üìñ –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ moon_data_processed.json...")
        driver.get(f"https://www.pythonanywhere.com/user/{USERNAME}/files/home/{USERNAME}/moon_data_processed.json?edit")
        time.sleep(5)

        # –ü–æ–∏—Å–∫ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("üîÑ –ü–æ–∏—Å–∫ iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        
        iframes = driver.find_elements(By.TAG_NAME, "iframe")
        editor_frame = None
        
        for by, selector in possible_selectors:
            try:
                editor_frame = driver.find_element(by, selector)
                break
            except:
                continue
        
        if not editor_frame and iframes:
            editor_frame = iframes[0]
        
        if not editor_frame:
            raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω iframe —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
            
        driver.switch_to.frame(editor_frame)
        time.sleep(5)

        # –ü–æ–∏—Å–∫ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
        processed_content = ""
        
        # –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ JavaScript API Ace —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        try:
            processed_content = driver.execute_script("""
                try {
                    var editor = ace.edit(document.querySelector('.ace_editor'));
                    return editor.getValue();
                } catch(e) {
                    return '';
                }
            """)
            if processed_content:
                print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ Ace Editor API")
        except:
            pass
        
        # –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ textarea
        if not processed_content:
            try:
                for selector in editor_selectors:
                    try:
                        editor_elem = driver.find_element(By.CSS_SELECTOR, selector)
                        processed_content = editor_elem.get_attribute('value') or editor_elem.text
                        if processed_content:
                            print(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ {selector}")
                            break
                    except:
                        continue
            except:
                pass
        
        # –°–ø–æ—Å–æ–± 3: –í—ã–¥–µ–ª–µ–Ω–∏–µ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
        if not processed_content:
            try:
                editor_elem = driver.find_element(By.CSS_SELECTOR, editor_selectors[0])
                actions = ActionChains(driver)
                actions.move_to_element(editor_elem).click()
                actions.key_down(Keys.CONTROL).send_keys('a').key_up(Keys.CONTROL)
                actions.perform()
                time.sleep(1)
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                processed_content = driver.execute_script("return window.getSelection().toString();")
                if processed_content:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–∏–µ")
            except:
                pass

        if not processed_content:
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")

        driver.switch_to.default_content()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(processed_content)} —Å–∏–º–≤–æ–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

        # 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ñ–∞–π–ª –¥–ª—è GitHub Actions
        print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è GitHub Actions...")
        with open('moon_data_processed.json', 'w', encoding='utf-8') as f:
            f.write(processed_content)
        
        print("‚úÖ –§–∞–π–ª moon_data_processed.json —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞")
        
        # –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print(f"üìù –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: {processed_content[:200]}...")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
    finally:
        print("üîö –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...")
        driver.quit()

if __name__ == "__main__":
    run()
